[project]
name = "creative-automation-pipeline"
version = "1.0.0"
description = "AI-powered creative automation pipeline for social ad campaigns"
authors = [{name = "Matt Strautmann"}]
requires-python = ">=3.10"
dependencies = [
    "pillow>=10.1.0",
    "openai>=1.3.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "requests>=2.31.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "pyyaml>=6.0.0",
]

[project.scripts]
creatimation = "src.cli.main:cli_main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"

exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "rembg.*",
    "PIL.*",
    "openai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
# Exclude obsolete tests that reference deleted creative_automation_agent module
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --ignore=tests/test_agent.py --ignore=tests/debug_agent.py --ignore=tests/test_e2e_pipeline.py"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
